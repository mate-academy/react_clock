{
    "sourceFile": "README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1711526017398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1711526024571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n # React Clock\n \n > [React + Typescript cheat sheet](https://mate-academy.github.io/fe-program/js/extra/react-typescript)\n \n-Create a `Clock` class component that will update the time every second using a given markup:\n+<!-- Create a `Clock` class component that will update the time every second using a given markup: -->\n \n > Here is [the working version](https://mate-academy.github.io/react_clock)\n \n - print current time on the page on page load;\n"
                },
                {
                    "date": 1711532376506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n \n > Here is [the working version](https://mate-academy.github.io/react_clock)\n \n - print current time on the page on page load;\n-  <!-- - use `.toUTCString().slice(-12, -4)` methods do avoid timezone issues; -->\n+  - use `.toUTCString().slice(-12, -4)` methods do avoid timezone issues;\n - update the time every second using the `window.setInterval`;\n - start the timer only when the component is added to the page (`componentDidMount`);\n - every second print the time in the DevTools using `console.log` method;\n - add the next comment above the console.debug line to ignore linter error\n"
                },
                {
                    "date": 1711552970073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,58 @@\n+# React Clock\n+\n+> [React + Typescript cheat sheet](https://mate-academy.github.io/fe-program/js/extra/react-typescript)\n+\n+Create a `Clock` class component that will update the time every second using a given markup:\n+\n+> Here is [the working version](https://mate-academy.github.io/react_clock)\n+\n+- print current time on the page on page load;\n+  - use `.toUTCString().slice(-12, -4)` methods do avoid timezone issues;\n+- update the time every second using the `window.setInterval`;\n+- start the timer only when the component is added to the page (`componentDidMount`);\n+- every second print the time in the DevTools using `console.log` method;\n+- add the next comment above the console.debug line to ignore linter error\n+    ```js\n+    // eslint-disable-next-line no-console\n+    console.log('some message');\n+    ```\n+- make the `App` a class component;\n+- add the `hasClock` property to the `App` state;\n+- the `Clock` should be visible only when the `hasClock` is `true`;\n+- hide the `Clock` on a right mouse click in the `document` (`contextmenu` event):\n+    ```js\n+    document.addEventListener('contextmenu', (event: MouseEvent) => {\n+      event.preventDefault(); // not to show the context menu\n+\n+      // put your code here\n+    });\n+    ```\n+- show the `Clock` on a left mouse click in the `document` (`click` event):\n+    ```js\n+    document.addEventListener('click', () => {});\n+    ```\n+- the time should not be printed to the console when the Clock is hidden (`componentWillUnmount`);\n+- add the `clockName` having `Clock-0` default value to the `App` state;\n+- pass it to the `Clock` to be shown near the time (see the markup):\n+    ```jsx\n+    <Clock name={this.state.clockName} />\n+    ```\n+- update the `clockName` every `3300ms` with a new value generated by existing `getRandomName` function;\n+- each time the name is changed, the `Clock` must print a message with an old name and a new name using the `console.debug` method (use `componentDidUpdate`):\n+    ```\n+    Renamed from oldName to newName\n+    ```\n+- to see `console.debug` messages enable the `verbose` level in DevTools console:\n+\n+![How to enable verbose level](./readme-files/enable-verbose-level.png)\n+\n+> check in the console that a renaming message occurs after each 3-4 time messages.\n+\n+![Expected console output](./readme-files/expected-console-output.png)\n+\n+## Instructions\n+- Install Prettier Extention and use this [VSCode settings](https://mate-academy.github.io/fe-program/tools/vscode/settings.json) to enable format on save.\n+- Implement a solution following the [React task guideline](https://github.com/mate-academy/react_task-guideline#react-tasks-guideline).\n+- Use the [React TypeScript cheatsheet](https://mate-academy.github.io/fe-program/js/extra/react-typescript).\n+- Open one more terminal and run tests with `npm test` to ensure your solution is correct.\n+- Replace `<your_account>` with your Github username in the [DEMO LINK](https://marinatea.github.io/react_clock/) and add it to the PR description.\n"
                }
            ],
            "date": 1711526017398,
            "name": "Commit-0",
            "content": "# React Clock\n\n> [React + Typescript cheat sheet](https://mate-academy.github.io/fe-program/js/extra/react-typescript)\n\nCreate a `Clock` class component that will update the time every second using a given markup:\n\n> Here is [the working version](https://mate-academy.github.io/react_clock)\n\n- print current time on the page on page load;\n  <!-- - use `.toUTCString().slice(-12, -4)` methods do avoid timezone issues; -->\n- update the time every second using the `window.setInterval`;\n- start the timer only when the component is added to the page (`componentDidMount`);\n- every second print the time in the DevTools using `console.log` method;\n- add the next comment above the console.debug line to ignore linter error\n    ```js\n    // eslint-disable-next-line no-console\n    console.log('some message');\n    ```\n- make the `App` a class component;\n- add the `hasClock` property to the `App` state;\n- the `Clock` should be visible only when the `hasClock` is `true`;\n- hide the `Clock` on a right mouse click in the `document` (`contextmenu` event):\n    ```js\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault(); // not to show the context menu\n\n      // put your code here\n    });\n    ```\n- show the `Clock` on a left mouse click in the `document` (`click` event):\n    ```js\n    document.addEventListener('click', () => {});\n    ```\n- the time should not be printed to the console when the Clock is hidden (`componentWillUnmount`);\n- add the `clockName` having `Clock-0` default value to the `App` state;\n- pass it to the `Clock` to be shown near the time (see the markup):\n    ```jsx\n    <Clock name={this.state.clockName} />\n    ```\n- update the `clockName` every `3300ms` with a new value generated by existing `getRandomName` function;\n- each time the name is changed, the `Clock` must print a message with an old name and a new name using the `console.debug` method (use `componentDidUpdate`):\n    ```\n    Renamed from oldName to newName\n    ```\n- to see `console.debug` messages enable the `verbose` level in DevTools console:\n\n![How to enable verbose level](./readme-files/enable-verbose-level.png)\n\n> check in the console that a renaming message occurs after each 3-4 time messages.\n\n![Expected console output](./readme-files/expected-console-output.png)\n\n## Instructions\n- Install Prettier Extention and use this [VSCode settings](https://mate-academy.github.io/fe-program/tools/vscode/settings.json) to enable format on save.\n- Implement a solution following the [React task guideline](https://github.com/mate-academy/react_task-guideline#react-tasks-guideline).\n- Use the [React TypeScript cheatsheet](https://mate-academy.github.io/fe-program/js/extra/react-typescript).\n- Open one more terminal and run tests with `npm test` to ensure your solution is correct.\n- Replace `<your_account>` with your Github username in the [DEMO LINK](https://<your_account>.github.io/react_clock/) and add it to the PR description.\n"
        }
    ]
}